package pers.qiqcheng.exp04_01;

import java.util.Scanner;

import pers.qiqcheng.exp01_01.Sort;

/*
 * 最长共子序列问题，课本p130
 */
public class LCS {
	private static final int MAXSIZE=100;
	/*public static int max(int a,int b){
		if(a>b) return a;
		else return b;
	}
	
*/	
	public static void printLcs(int h[][],int m,int k){
		
	}
	public static int  Lcs(int a[],int b[],int m,int k){
		int L[][]=new int[m+1][k+1];//L[m][k],表示a[0..m]与b[0...k]的最长公共子序列长度
		int H[][]=new int[m+1][k+1];//序列A和B的最长公共子序列的有关信息数组H[1..n, 1..m]
		for(int j=0;j<m;j++){
			L[0][j]=0;
		}
		for(int i=0;i<k;i++){
			L[i][0]=0;
		}
		for(int i=1;i<=m;i++){
			for(int j=1;j<=k;j++){
				if(a[i]==b[j]){
					L[i][j]=L[i-1][j-1]+1;
					H[i][j]=0;
				}/*else{
					L[i][j]=max(L[i][j-1],L[i-1][j]);
				}*/
				else if(L[i-1][j]>=L[i][j-1]){
					L[i][j]=L[i-1][j];
					H[i][j]=1;
				}else {
					L[i][j]=L[i][j-1];
					H[i][j]=2;
				}
			}
		}
		printLcs(H,m,k);
		return L[m][k];
	}
	public static void main(String[] args) {
		int n;//测试数据例个数
		int m,k;//序列长度
		int a[]=new int[MAXSIZE];//序列A
		int b[]=new int[MAXSIZE];//序列B
		Scanner scanner=new Scanner(System.in);
		n=scanner.nextInt();
		while(n>0){
			m=scanner.nextInt();
			for(int i=1;i<=m;i++){
				a[i]=scanner.nextInt();
			}
			k=scanner.nextInt();
			for(int i=1;i<=k;i++){
				b[i]=scanner.nextInt();
			}
			Sort sort=new Sort();
			sort.QuickSort(a, 1, m);
			sort.QuickSort(b, 1, k);
			n--;	
			
			/*for(int i=0;i<=m;i++){
				System.out.print(a[i]+" ");
			}
			for(int i=0;i<=k;i++){
				System.out.print(b[i]+" ");
			}*/
			 
			System.out.println(Lcs(a, b, m, k));
		}
		
	}

}
