package pers.qiqcheng.exp04_01;

public class MSIA {

	public static void main(String[] args) {
		
	}
	public static ArrayList<Integer> maxSubIncreaseArray(int[] array, int n){     
        int[] list = new int[n];
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> tmp = new ArrayList<Integer>();
        int index = -1;//用于标记当前元素之前的第一个递增子序列的位置
        int maxIndex = 0;//用于标记该序列的最长递增子序列的位置
        int max = Integer.MIN_VALUE;//最长递增子序列的长度
        list[0] = 1;//该列表用于标记包括当前元素在内的前半部分的最长递增子序列的长度
        tmp.add(array[0]);
        res.add(tmp);
        for(int i=1;i<n;i++){
            index = -1;
            tmp = new ArrayList<Integer>();
            for(int j=0;j<i;j++){
                if(array[j]<array[i]&&list[j]>list[i]){
                    list[i] = list[j];
                    index = j; 
                }
            }
            ++list[i];
            if(index>-1)
                tmp.addAll(res.get(index));
            tmp.add(array[i]);
            res.add(tmp);
            if(list[i]>max){
                max = list[i];
                maxIndex = i;
            }
        }
        return res.get(maxIndex);
    }
}
