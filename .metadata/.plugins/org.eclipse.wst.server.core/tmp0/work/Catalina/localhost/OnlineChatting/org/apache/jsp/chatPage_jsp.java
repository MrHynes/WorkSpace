/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M9
 * Generated at: 2017-03-30 12:59:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import pers.qiqcheng.onlinechat.bean.Message;

public final class chatPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("pers.qiqcheng.onlinechat.bean.Message");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>EnjoyChat</title>\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"css/head.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script src=\"js/jquery-3.1.1.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"js/my.js\" type=\"text/javascript\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"inputFocus()\">\r\n");
      out.write("\t");

		String name = (String) session.getAttribute("users");
		if (name == null) {
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      if (true) {
        _jspx_page_context.forward("login.jsp");
        return;
      }
      out.write('\r');
      out.write('\n');
      out.write('	');

		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "head.jsp", out, false);
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\" style=\"margin-top: 15px;\">\r\n");
      out.write("\t\t\t<!-- 聊天区 -->\r\n");
      out.write("\t\t\t<div class=\"col-lg-8\">\r\n");
      out.write("\t\t\t\t<!-- 聊天内容 -->\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-primary chatWindowH\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"glyphicon glyphicon-earphone\"></span> &nbsp;聊天内容\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body  \">\r\n");
      out.write("\t\t\t\t\t\t<!--显示聊天内容-->\r\n");
      out.write("\t\t\t\t\t\t<iframe src=\"msg.jsp\" frameborder=\"0\" width=\"100%\" height=\"390px\"></iframe>\r\n");
      out.write("\t\t\t\t\t\t<!-- \r\n");
      out.write("\t\t\t\t\t\t");
List<Message> msgList = (List<Message>) application.getAttribute("msgList");
							if (msgList != null) {
								for (int i = 0; i < msgList.size(); i++) {
									Message message = msgList.get(i);
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"msg-list-body\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clearfix msg-wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"msg-head\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"msg-name label label-success pull-left\"> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></span> &nbsp;");
      out.print(message.getSenderName());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</span> <span class=\"msg-time label label-danger pull-left\"> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-time\"></span> &nbsp;");
      out.print(message.getTime());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"msg-content\">");
      out.print(message.getSendMsg());
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- 输入框 -->\r\n");
      out.write("\t\t\t\t<form action=\"getMsg\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group input-group-lg\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"input-group-btn\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-default\" id=\"emotion-btn\" type=\"button\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<!--添加表情图-->\r\n");
      out.write("\t\t\t\t\t\t\t\t<img src=\"img/emotion_smile.png\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"width: 24px; height: 24px;\">\r\n");
      out.write("\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t</span> <input type=\"text\" class=\"form-control\" placeholder=\"请输入聊天内容\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"msg\" id=\"sendbtn\"> <span class=\"input-group-btn\">\r\n");
      out.write("\t\t\t\t\t\t</span> <input type=\"submit\" id=\"sendMsg\" class=\"form-control btn btn-warning\"\r\n");
      out.write("\t\t\t\t\t\t\tvalue=\"发送\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 个人信息 -->\r\n");
      out.write("\t\t\t<div class=\"col-lg-4\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-primary userInfoH\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"glyphicon glyphicon-user\"></span> &nbsp;个人信息\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-9\">\r\n");
      out.write("\t\t\t\t\t\t\t<h5>\r\n");
      out.write("\t\t\t\t\t\t\t\t昵称：");
      out.print(name);
      out.write("</h5>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-default\" data-toggle=\"modal\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-target=\"#changeName\">修改</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 在线列表 -->\r\n");
      out.write("\t\t\t<div class=\"col-lg-4\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-primary\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"glyphicon glyphicon-list\"></span> &nbsp;在线名单\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body  chatUserListH pre-scrollable\">\r\n");
      out.write("\t\t\t\t\t\t<table\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"table table-hover table-responsive table-bordered list-table\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								Set<String> onlineUserList = (HashSet) application.getAttribute("onlineUserList");
								Iterator it = onlineUserList.iterator();
								while (it.hasNext()) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><span class=\"glyphicon glyphicon-user\"></span>&nbsp;");
      out.print(it.next());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-footer\" id=\"list-count\">\r\n");
      out.write("\t\t\t\t\t\t当前在线：");
      out.print(onlineUserList.size());
      out.write("人\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 修改名称对话框 -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"changeName\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("\t\taria-hidden=\"true\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<form action=\"rename?name=");
      out.print(name);
      out.write("\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span> <span class=\"sr-only\"></span>\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<h4 class=\"modal-title\" id=\"myModalLabel\">请设置聊天昵称</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-8 col-sm-push-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"alert alert-danger\" role=\"alert\" id=\"nickname-error\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"display: none\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-remove\"></span> 请填写昵称\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\">昵称</span> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname=\"rename\" class=\"form-control\" placeholder=\"请输入昵称\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"应用昵称\" class=\"btn btn-primary\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
